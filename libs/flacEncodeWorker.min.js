(()=>{"use strict";const e="WORKER_LIBFLAC_READY";function t(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}self.FLAC_SCRIPT_LOCATION="/libs/",importScripts("/libs/libflac4-1.3.2.min.js");const n={0:"FLAC__STREAM_ENCODER_OK",1:"FLAC__STREAM_ENCODER_UNINITIALIZED",2:"FLAC__STREAM_ENCODER_OGG_ERROR",3:"FLAC__STREAM_ENCODER_VERIFY_DECODER_ERROR",4:"FLAC__STREAM_ENCODER_VERIFY_MISMATCH_IN_AUDIO_DATA",5:"FLAC__STREAM_ENCODER_CLIENT_ERROR",6:"FLAC__STREAM_ENCODER_IO_ERROR",7:"FLAC__STREAM_ENCODER_FRAMING_ERROR",8:"FLAC__STREAM_ENCODER_MEMORY_ALLOCATION_ERROR"},_=Object.freeze({UNINTIALIZED:"uninitialized",WORKING:"working",FINISHED:"finished"});class s{constructor(e,n=16,s=4096){if(t(this,"_encoderId",0),t(this,"_flacBuffers",[]),t(this,"_flacLength",0),t(this,"_state",_.UNINTIALIZED),t(this,"_data",null),t(this,"_onMetadataAvailable",(()=>{})),!Flac.isReady())throw new Error("libflac is not ready yet!");if(this._sampleRate=e,this._bitDepth=n,this._bufferSize=s,this._encoderId=Flac.init_libflac_encoder(this._sampleRate,1,this._bitDepth,5,0,!0,0),0===this._encoderId)throw new Error("Failed to create libflac encoder.");if(0!==Flac.init_encoder_stream(this._encoderId,this._onEncodedData.bind(this),this._onMetadataAvailable.bind(this)))throw new Error("Failed to initialise libflac encoder.");this._state=_.WORKING}encode(e){if(this._state!==_.WORKING)throw new Error("Encoder is not ready or has finished.");if(!Flac.isReady())throw new Error("Flac not ready");const t=e.length,s=new Int32Array(t),a=new DataView(s.buffer);let i=0;for(let n=0;n<t;n++)a.setInt32(i,32767*e[n],!0),i+=4;if(1!==Flac.FLAC__stream_encoder_process_interleaved(this._encoderId,s,s.length)){const e=Flac.FLAC__stream_encoder_get_state(this._encoderId);console.error("Error during encoding",n[e])}}finish(){if(this._state===_.WORKING){this._state=_.FINISHED;const e=Flac.FLAC__stream_encoder_finish(this._encoderId);console.log("Flac encoding finished: ",e),Flac.FLAC__stream_encoder_delete(this._encoderId),this._data=this._exportFlacBlob()}}getBlob(){return this._state===_.FINISHED?this._data:null}_exportFlacBlob(){const e=function(e,t){const n=new Uint8Array(t);let _=0;const s=e.length;for(let t=0;t<s;t++){const s=e[t];n.set(s,_),_+=s.length}return n}(this._flacBuffers,this._flacLength);return new Blob([e],{type:"audio/flac"})}_onEncodedData(e,t){this._flacBuffers.push(e),this._flacLength+=e.byteLength}}let a=null;self.onmessage=function(t){switch(t.data.command){case"MAIN_THREAD_INIT":{const n=t.data.config.bps,_=t.data.config.sampleRate;Flac.isReady()?(a=new s(_,n),self.postMessage({command:e})):Flac.onready=function(){setTimeout((()=>{a=new s(_,n),self.postMessage({command:e})}),0)};break}case"MAIN_THREAD_NEW_DATA_ARRIVED":null===a?console.error("flacEncoderWorker received data when the encoder is not ready."):a.encode(t.data.buf);break;case"MAIN_THREAD_FINISH":if(null!==a){a.finish();const e=a.getBlob();self.postMessage({command:"WORKER_BLOB_READY",buf:e}),a=null}}}})();
//# sourceMappingURL=flacEncodeWorker.min.map